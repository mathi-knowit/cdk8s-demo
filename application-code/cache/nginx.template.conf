pid /tmp/nginx.pid; 

events {
    worker_connections 1024;
}
# this nginx server is mimicking a cache server by forwarding only every other request to the database service (which is also micked by another nginx server)

http {
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;


    # Split requests based on the request ID
    split_clients $request_id $route {
        50%  origin;
        *    cache;
    }

    server {
        listen 8080 default_server;

        location / {
            if ($route = "origin") {
                # my forwarded Kubernetes service
                proxy_pass http://${DB_SERVICE_NAME}:${DB_SERVICE_PORT};
                break;
            }

            # Return a JSON response with container ID
            default_type application/json;
            add_header Content-Type application/json;
            # HOSTNAME is an environment variable set by Kubernetes
            return 200 '{"message": "Answer from Cache", "server_id": "$HOSTNAME"}';
        }
    }
}
